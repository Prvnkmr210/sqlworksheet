Write an SQL query to print details of the Workers who have joined in Junâ€™2011.
-> select * from worker where to_char(joining_date, 'yyyy') = 2011 and to_char(joining_date, 'mm')=6; 

Write an SQL query to fetch the no. of workers for each department in the descending order.
-> select department, count(worker_id) no_of_workers from worker group by department order by no_of_workers DESC;

DEPARTMENT	NO_OF_WORKERS
Admin		4
HR			2
Account		2


Write an SQL query to print details of the Workers who are also Managers.
-> select distinct worker.first_name, title.worker_title from worker join title on worker.worker_id = title.worker_ref_id and title.worker_title in ('Manager');

FIRST_NAME	WORKER_TITLE
Monika	Manager                  
Vivek	Manager    


Math Function example
Write an SQL query to show only odd rows from a table.
-> select * from worker where MOD(worker_id, 2) <> 0;


Write an SQL query to clone a new table from another table.
-> select * into TitleClone from title; => No SQL
-> SELECT * INTO WorkerClone FROM Worker WHERE 1 = 0; => cloning without information
-> create table TitleClone AS select * from title; => Oracle SQL

Write an SQL query to fetch intersecting records of two tables.
-> select * from title intersect select * from titleclone;

Write an SQL query to show records from one table that another table does not have.
-> DELETE from workerclone where workerclone.worker_id=8;
-> select * from worker minus select * from workerclone;

Write an SQL query to show the current date and time.
-> select sysdate from dual;

 Write an SQL query to show the top n (say 10) records of a table.
 -> select * from worker fetch first 5 rows only;
 
 Write an SQL query to show the k record of a table.
 -> select * from worker offset 2 rows fetch first 1 rows only;
 
 Write an SQL query to fetch the list of employees with the same salary.
 -> select w1.first_name, w1.salary from worker w1 JOIN worker w2 on w1.salary = w2.salary and w1.worker_id <> w2.worker_id;
 
 Write an SQL query to show the second highest salary from a table.
 -> select max(salary) from worker where salary not in (select max(salary) from worker);

Write an SQL query to show one row twice in results from a table.
-> select * from worker where worker.worker_id=2
  union all
  select * from worker where worker.worker_id=2;
  
Write an SQL query to fetch the departments that have less than five people in it.
-> select department, count(*) from worker group by department having count(*) < 5; 

Write an SQL query to fetch the last five records from a table.
-> select * from worker offset ((select count(*) from worker)-5) rows fetch first 5 rows only;

Write an SQL query to print the name of employees having the highest salary in each department.
-> select department, max(salary) from worker group by department; => name of employees missing; if group by used, only agreegate function can be used.
-> select first_name, department, salary from worker where (department, salary) in (select  department, max(salary) from worker group by department);
-> SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary from(SELECT max(Salary) as TotalSalary,DEPARTMENT from Worker group by DEPARTMENT) as TempNew 
	Inner Join Worker t on TempNew.DEPARTMENT=t.DEPARTMENT 
	and TempNew.TotalSalary=t.Salary;  => Doesn't work with Oracle 
	
Write an SQL query to fetch departments along with the total salaries paid for each of them.
->  SELECT DEPARTMENT, sum(Salary) from worker group by DEPARTMENT;
